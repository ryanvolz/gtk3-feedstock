# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: osx
  pool:
    vmImage: macOS-10.15
  strategy:
    matrix:
      osx_64_:
        CONFIG: osx_64_
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_64_
      osx_arm64_:
        CONFIG: osx_arm64_
        UPLOAD_PACKAGES: 'True'
        SHORT_CONFIG: osx_arm64_
  timeoutInMinutes: 360

  steps:
  # TODO: Fast finish on azure pipelines?
  - script: |
      export CI=azure
      export OSX_FORCE_SDK_DOWNLOAD="1"
      export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
      export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
      ./.scripts/run_osx_build.sh
    displayName: Run OSX build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
  - script: |
        # Set the artifact name, specialized for this particular job run.
        ARTIFACT_NAME="conda_artifacts_$(build.BuildNumber).$(system.JobAttempt)_$(CONFIG)"
        if [[ ${#ARTIFACT_NAME} -gt 80 ]]; then
          ARTIFACT_NAME="conda_artifacts_$(build.BuildNumber).$(system.JobAttempt)_$(SHORT_CONFIG)"
        fi
        echo "##vso[task.setVariable variable=ARTIFACT_NAME]$ARTIFACT_NAME"
        echo "ARTIFACT_NAME: $ARTIFACT_NAME"

        # Check that the conda-build directory exists for archiving.
        ARTIFACT_DIR=/Users/runner/miniforge3/conda-bld/
        if [ -d "$ARTIFACT_DIR" ]; then
          # remove caches to save some artifact space
          rm -rf $ARTIFACT_DIR/git_cache
          rm -rf $ARTIFACT_DIR/pip_cache
          rm -rf $ARTIFACT_DIR/src_cache
          # delete broken symlinks so that artifact publishing doesn't fail
          find $ARTIFACT_DIR -type l -exec test ! -e {} \; -delete
        else
          echo "##vso[task.logissue type=error]conda-build directory does not exist"
          exit 1
        fi
        echo "##vso[task.setVariable variable=ARTIFACT_PATH]$ARTIFACT_DIR"
        echo "ARTIFACT_DIR: $ARTIFACT_DIR"

        if [ $AGENT_JOBSTATUS == "Failed" ]; then
          # Create a zip archive to use as the artifact.
          ARTIFACT_ZIP="$(Build.ArtifactStagingDirectory)/${ARTIFACT_NAME}.zip"
          cd "$ARTIFACT_DIR"
          zip -r -y -q "$ARTIFACT_ZIP" . -x '*.git/*' '*_*_env*/*' '*_cache/*'
          echo "##vso[task.setVariable variable=ARTIFACT_PATH]$ARTIFACT_ZIP"
          echo "ARTIFACT_ZIP: $ARTIFACT_ZIP"
        fi
    displayName: Prepare conda build artifacts
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@1
    displayName: Store conda build artifacts
    condition: not(eq(variables.ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(ARTIFACT_PATH)
      artifactName: $(ARTIFACT_NAME)